var A=Object.create;var v=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var S=Object.getOwnPropertyNames;var _=Object.getPrototypeOf,T=Object.prototype.hasOwnProperty;var w=(e,o)=>()=>(o||e((o={exports:{}}).exports,o),o.exports);var N=(e,o,t,s)=>{if(o&&typeof o=="object"||typeof o=="function")for(let n of S(o))!T.call(e,n)&&n!==t&&v(e,n,{get:()=>o[n],enumerable:!(s=C(o,n))||s.enumerable});return e};var b=(e,o,t)=>(t=e!=null?A(_(e)):{},N(o||!e||!e.__esModule?v(t,"default",{value:e,enumerable:!0}):t,e));var m=w((I,l)=>{(function(){"use strict";var e={}.hasOwnProperty,o="[native code]";function t(){for(var s=[],n=0;n<arguments.length;n++){var r=arguments[n];if(r){var a=typeof r;if(a==="string"||a==="number")s.push(r);else if(Array.isArray(r)){if(r.length){var i=t.apply(null,r);i&&s.push(i)}}else if(a==="object"){if(r.toString!==Object.prototype.toString&&!r.toString.toString().includes("[native code]")){s.push(r.toString());continue}for(var u in r)e.call(r,u)&&r[u]&&s.push(u)}}}return s.join(" ")}typeof l<"u"&&l.exports?(t.default=t,l.exports=t):typeof define=="function"&&typeof define.amd=="object"&&define.amd?define("classnames",[],function(){return t}):window.classNames=t})()});var j=({message:e})=>React.createElement(React.Fragment,null,React.createElement("div",{className:"flex rounded-md border border-dashed border-red-700 bg-red-100 p-2"},React.createElement("svg",{className:"h-6 w-6 flex-none text-red-700",fill:"none",viewBox:"0 0 24 24","stroke-width":"1.5",stroke:"currentColor","aria-hidden":"true"},React.createElement("path",{"stroke-linecap":"round","stroke-linejoin":"round",d:"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z"})),React.createElement("div",{className:"font-inter px-2 text-sm font-medium text-red-700"},e))),g=j;var x=async e=>{await e.importJS("https://cdnjs.cloudflare.com/ajax/libs/react/18.2.0/umd/react.development.js"),await e.importJS("https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.2.0/umd/react-dom.development.js")};var k=(e,o)=>{let[t,s]=React.useState(o),n=r=>a=>{s(i=>({...i,[r]:a})),console.log("Pushing ${attrName} to server",a),e.pushEvent(`update_${r}`,a)};return React.useEffect(()=>{e.handleEvent("update",r=>{console.log("Attribute update from server",r),s(a=>({...Object.assign(a,r)}))})},[]),[t,n]},y=k;var p=b(m()),P=({name:e,label:o,defaultValue:t,testId:s,onChange:n,orientation:r="vert"})=>React.createElement("div",{className:(0,p.default)({"flex flex-row items-baseline":r=="horiz"})},React.createElement("label",{htmlFor:e,className:(0,p.default)({block:r=="vert","pr-1 uppercase":r=="horiz"},"mb-1 text-sm font-medium")},o),React.createElement("input",{type:"text","data-testid":s??e,value:t,name:e,onChange:a=>n(a.target.value),className:(0,p.default)({"block w-full":r=="vert"},"rounded-lg border border-gray-300 bg-gray-50 p-1.5 text-sm focus:border-blue-500 focus:ring-blue-500")})),c=P;var d=b(m()),z=({name:e,label:o,options:t,selectedOption:s,onChange:n,className:r="",orientation:a="vert"})=>React.createElement("div",{className:(0,d.default)({"flex flex-row items-baseline":a=="horiz"},r)},React.createElement("label",{htmlFor:e,className:(0,d.default)({block:a=="vert","pr-1 uppercase":a=="horiz"},"mb-1 text-sm font-medium")},o),React.createElement("select",{id:e,value:s||void 0,onChange:i=>n(i.target.value),className:(0,d.default)({"block w-full":a=="vert"}," bg-caret-down appearance-none rounded-lg border border-gray-300 bg-gray-50 bg-[length:10px] bg-[center_right_10px] bg-no-repeat p-2 pr-5 text-sm focus:border-blue-500 focus:ring-blue-500")},t.map(i=>React.createElement("option",{key:i.value,value:i.value},i.label)))),f=z;var E=({initialAttrs:e,ctx:o})=>{let[t,s]=y(o,e),n=[{label:"File",value:"file"},{label:"Environment Variable",value:"env"}];return n.push({label:"K8s Service Account",value:"k8s"}),React.createElement("div",{className:"rounded-md border border-solid border-gray-300 font-inter font-medium text-gray-600"},React.createElement("div",{className:"border-b-solid flex flex-wrap gap-x-5 gap-y-3 border-b border-b-gray-300 bg-blue-100 p-3"},React.createElement(f,{name:"source_type",label:"Source Type",options:n,selectedOption:t.source_type,onChange:s("source_type"),orientation:"horiz"}),React.createElement(c,{label:"Assign To",name:"assign_to",defaultValue:t.result_variable,onChange:s("result_variable"),orientation:"horiz"})),React.createElement("div",{className:"flex flex-wrap gap-x-5 p-3"},t.source_type!="k8s"&&React.createElement(c,{label:t.source_type=="file"?"File Path":"Env Var",name:"source",defaultValue:t.source,onChange:s("source"),orientation:"vert"}),t.source_type!="k8s"&&React.createElement(c,{label:"Context",name:"context",defaultValue:t.opts.context||"",onChange:r=>s("opts")({...t.opts,context:r})}),React.createElement(f,{name:"insecure_skip_tls_verify",label:"Insecure Skip TLS Verify",options:[{label:"Yes",value:"true"},{label:"No",value:"false"}],selectedOption:t.opts.insecure_skip_tls_verify.toString(),onChange:r=>s("opts")({...t.opts,insecure_skip_tls_verify:JSON.parse(r)})})))},h=E;var G=async(e,o)=>{await x(e),e.root.innerHTML="loading...",e.importCSS("main.css"),e.importCSS("https://fonts.googleapis.com/css2?family=Inter:wght@400;500&display=swap");let t=ReactDOM.createRoot(e.root);if(o.error)return t.render(React.createElement(g,{message:o.error}));t.render(React.createElement(h,{initialAttrs:o,ctx:e}))};export{G as init};
/*! Bundled license information:

classnames/index.js:
  (*!
  	Copyright (c) 2018 Jed Watson.
  	Licensed under the MIT License (MIT), see
  	http://jedwatson.github.io/classnames
  *)
*/
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2NsYXNzbmFtZXMvaW5kZXguanMiLCAiLi4vLi4vLi4vYXNzZXRzL3NoYXJlZC9lcnJvci50c3giLCAiLi4vLi4vLi4vYXNzZXRzL3NoYXJlZC91dGlscy50cyIsICIuLi8uLi8uLi9hc3NldHMvc2hhcmVkL2F0dHJfc3RhdGUudHN4IiwgIi4uLy4uLy4uL2Fzc2V0cy9zaGFyZWQvZm9ybS9pbnB1dC50c3giLCAiLi4vLi4vLi4vYXNzZXRzL3NoYXJlZC9mb3JtL3NlbGVjdC50c3giLCAiLi4vLi4vLi4vYXNzZXRzL2Nvbm5lY3Rpb25fY2VsbC9hcHAudHN4IiwgIi4uLy4uLy4uL2Fzc2V0cy9jb25uZWN0aW9uX2NlbGwvbWFpbi50c3giXSwKICAic291cmNlc0NvbnRlbnQiOiBbIi8qIVxuXHRDb3B5cmlnaHQgKGMpIDIwMTggSmVkIFdhdHNvbi5cblx0TGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlIChNSVQpLCBzZWVcblx0aHR0cDovL2plZHdhdHNvbi5naXRodWIuaW8vY2xhc3NuYW1lc1xuKi9cbi8qIGdsb2JhbCBkZWZpbmUgKi9cblxuKGZ1bmN0aW9uICgpIHtcblx0J3VzZSBzdHJpY3QnO1xuXG5cdHZhciBoYXNPd24gPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblx0dmFyIG5hdGl2ZUNvZGVTdHJpbmcgPSAnW25hdGl2ZSBjb2RlXSc7XG5cblx0ZnVuY3Rpb24gY2xhc3NOYW1lcygpIHtcblx0XHR2YXIgY2xhc3NlcyA9IFtdO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBhcmcgPSBhcmd1bWVudHNbaV07XG5cdFx0XHRpZiAoIWFyZykgY29udGludWU7XG5cblx0XHRcdHZhciBhcmdUeXBlID0gdHlwZW9mIGFyZztcblxuXHRcdFx0aWYgKGFyZ1R5cGUgPT09ICdzdHJpbmcnIHx8IGFyZ1R5cGUgPT09ICdudW1iZXInKSB7XG5cdFx0XHRcdGNsYXNzZXMucHVzaChhcmcpO1xuXHRcdFx0fSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGFyZykpIHtcblx0XHRcdFx0aWYgKGFyZy5sZW5ndGgpIHtcblx0XHRcdFx0XHR2YXIgaW5uZXIgPSBjbGFzc05hbWVzLmFwcGx5KG51bGwsIGFyZyk7XG5cdFx0XHRcdFx0aWYgKGlubmVyKSB7XG5cdFx0XHRcdFx0XHRjbGFzc2VzLnB1c2goaW5uZXIpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIGlmIChhcmdUeXBlID09PSAnb2JqZWN0Jykge1xuXHRcdFx0XHRpZiAoYXJnLnRvU3RyaW5nICE9PSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nICYmICFhcmcudG9TdHJpbmcudG9TdHJpbmcoKS5pbmNsdWRlcygnW25hdGl2ZSBjb2RlXScpKSB7XG5cdFx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGFyZy50b1N0cmluZygpKTtcblx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGZvciAodmFyIGtleSBpbiBhcmcpIHtcblx0XHRcdFx0XHRpZiAoaGFzT3duLmNhbGwoYXJnLCBrZXkpICYmIGFyZ1trZXldKSB7XG5cdFx0XHRcdFx0XHRjbGFzc2VzLnB1c2goa2V5KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gY2xhc3Nlcy5qb2luKCcgJyk7XG5cdH1cblxuXHRpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcblx0XHRjbGFzc05hbWVzLmRlZmF1bHQgPSBjbGFzc05hbWVzO1xuXHRcdG1vZHVsZS5leHBvcnRzID0gY2xhc3NOYW1lcztcblx0fSBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBkZWZpbmUuYW1kID09PSAnb2JqZWN0JyAmJiBkZWZpbmUuYW1kKSB7XG5cdFx0Ly8gcmVnaXN0ZXIgYXMgJ2NsYXNzbmFtZXMnLCBjb25zaXN0ZW50IHdpdGggbnBtIHBhY2thZ2UgbmFtZVxuXHRcdGRlZmluZSgnY2xhc3NuYW1lcycsIFtdLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZXR1cm4gY2xhc3NOYW1lcztcblx0XHR9KTtcblx0fSBlbHNlIHtcblx0XHR3aW5kb3cuY2xhc3NOYW1lcyA9IGNsYXNzTmFtZXM7XG5cdH1cbn0oKSk7XG4iLCAiaW50ZXJmYWNlIEVycm9yUHJvcHMge1xuICBtZXNzYWdlOiBzdHJpbmdcbn1cbmNvbnN0IEVycm9yID0gKHsgbWVzc2FnZSB9OiBFcnJvclByb3BzKSA9PiAoXG4gIDw+XG4gICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IHJvdW5kZWQtbWQgYm9yZGVyIGJvcmRlci1kYXNoZWQgYm9yZGVyLXJlZC03MDAgYmctcmVkLTEwMCBwLTJcIj5cbiAgICAgIDxzdmdcbiAgICAgICAgY2xhc3NOYW1lPVwiaC02IHctNiBmbGV4LW5vbmUgdGV4dC1yZWQtNzAwXCJcbiAgICAgICAgZmlsbD1cIm5vbmVcIlxuICAgICAgICB2aWV3Qm94PVwiMCAwIDI0IDI0XCJcbiAgICAgICAgc3Ryb2tlLXdpZHRoPVwiMS41XCJcbiAgICAgICAgc3Ryb2tlPVwiY3VycmVudENvbG9yXCJcbiAgICAgICAgYXJpYS1oaWRkZW49XCJ0cnVlXCJcbiAgICAgID5cbiAgICAgICAgPHBhdGhcbiAgICAgICAgICBzdHJva2UtbGluZWNhcD1cInJvdW5kXCJcbiAgICAgICAgICBzdHJva2UtbGluZWpvaW49XCJyb3VuZFwiXG4gICAgICAgICAgZD1cIk0xMiA5djMuNzVtLTkuMzAzIDMuMzc2Yy0uODY2IDEuNS4yMTcgMy4zNzQgMS45NDggMy4zNzRoMTQuNzFjMS43MyAwIDIuODEzLTEuODc0IDEuOTQ4LTMuMzc0TDEzLjk0OSAzLjM3OGMtLjg2Ni0xLjUtMy4wMzItMS41LTMuODk4IDBMMi42OTcgMTYuMTI2ek0xMiAxNS43NWguMDA3di4wMDhIMTJ2LS4wMDh6XCJcbiAgICAgICAgPjwvcGF0aD5cbiAgICAgIDwvc3ZnPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb250LWludGVyIHB4LTIgdGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LXJlZC03MDBcIj5cbiAgICAgICAge21lc3NhZ2V9XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC8+XG4pXG5cbmV4cG9ydCBkZWZhdWx0IEVycm9yXG4iLCAiaW1wb3J0IHsgS2lub0NvbnRleHQgfSBmcm9tICcuLi9raW5vJ1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55ICovXG5leHBvcnQgY29uc3QgZGVib3VuY2UgPSA8VCBleHRlbmRzICguLi5hcmdzOiBhbnlbXSkgPT4gUmV0dXJuVHlwZTxUPj4oXG4gIGNhbGxiYWNrOiBULFxuICB0aW1lb3V0OiBudW1iZXIsXG4pOiAoKC4uLmFyZ3M6IFBhcmFtZXRlcnM8VD4pID0+IHZvaWQpID0+IHtcbiAgbGV0IHRpbWVyOiBSZXR1cm5UeXBlPHR5cGVvZiBzZXRUaW1lb3V0PlxuXG4gIHJldHVybiAoLi4uYXJnczogUGFyYW1ldGVyczxUPikgPT4ge1xuICAgIGNsZWFyVGltZW91dCh0aW1lcilcbiAgICB0aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgY2FsbGJhY2soLi4uYXJncylcbiAgICB9LCB0aW1lb3V0KVxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBsb2FkUmVhY3QgPSBhc3luYyAoY3R4OiBLaW5vQ29udGV4dCk6IFByb21pc2U8dm9pZD4gPT4ge1xuICBpZiAoREVCVUcpIHtcbiAgICBhd2FpdCBjdHguaW1wb3J0SlMoXG4gICAgICAnaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvcmVhY3QvMTguMi4wL3VtZC9yZWFjdC5kZXZlbG9wbWVudC5qcycsXG4gICAgKVxuICAgIGF3YWl0IGN0eC5pbXBvcnRKUyhcbiAgICAgICdodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9yZWFjdC1kb20vMTguMi4wL3VtZC9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnLFxuICAgIClcbiAgfSBlbHNlIHtcbiAgICBhd2FpdCBjdHguaW1wb3J0SlMoXG4gICAgICAnaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvcmVhY3QvMTguMi4wL3VtZC9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycsXG4gICAgKVxuICAgIGF3YWl0IGN0eC5pbXBvcnRKUyhcbiAgICAgICdodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9yZWFjdC1kb20vMTguMi4wL3VtZC9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnLFxuICAgIClcbiAgfVxufVxuIiwgImltcG9ydCB7IEtpbm9Db250ZXh0IH0gZnJvbSAnLi4va2lubydcblxudHlwZSBVcGRhdGVBdHRyRnVuPEF0dHJzVHlwZT4gPSAoXG4gIGF0dHJOYW1lOiBzdHJpbmcsXG4pID0+IChBdHRyVmFsdWU6IEF0dHJzVHlwZVtrZXlvZiBBdHRyc1R5cGVdKSA9PiB2b2lkXG5cbmNvbnN0IHVzZUF0dHJzU3RhdGUgPSA8QXR0cnNUeXBlIGV4dGVuZHMgb2JqZWN0PihcbiAgY3R4OiBLaW5vQ29udGV4dCxcbiAgaW5pdGlhbEF0dHJzOiBBdHRyc1R5cGUsXG4pOiBbQXR0cnNUeXBlLCBVcGRhdGVBdHRyRnVuPEF0dHJzVHlwZT5dID0+IHtcbiAgY29uc3QgW2F0dHJzLCBzZXRBdHRyc10gPSBSZWFjdC51c2VTdGF0ZTxBdHRyc1R5cGU+KGluaXRpYWxBdHRycylcbiAgY29uc3QgdXBkYXRlQXR0cjogVXBkYXRlQXR0ckZ1bjxBdHRyc1R5cGU+ID0gKGF0dHJOYW1lKSA9PiAoYXR0clZhbHVlKSA9PiB7XG4gICAgc2V0QXR0cnMoKGF0dHJzKSA9PiAoeyAuLi5hdHRycywgW2F0dHJOYW1lXTogYXR0clZhbHVlIH0pKVxuICAgIGNvbnNvbGUubG9nKCdQdXNoaW5nICR7YXR0ck5hbWV9IHRvIHNlcnZlcicsIGF0dHJWYWx1ZSlcbiAgICBjdHgucHVzaEV2ZW50KGB1cGRhdGVfJHthdHRyTmFtZX1gLCBhdHRyVmFsdWUpXG4gIH1cblxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGN0eC5oYW5kbGVFdmVudDxBdHRyc1R5cGU+KCd1cGRhdGUnLCAodXBkYXRlcykgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ0F0dHJpYnV0ZSB1cGRhdGUgZnJvbSBzZXJ2ZXInLCB1cGRhdGVzKVxuICAgICAgc2V0QXR0cnMoKGF0dHJzKSA9PiAoe1xuICAgICAgICAuLi5PYmplY3QuYXNzaWduKGF0dHJzLCB1cGRhdGVzKSxcbiAgICAgIH0pKVxuICAgIH0pXG4gIH0sIFtdKVxuICByZXR1cm4gW2F0dHJzLCB1cGRhdGVBdHRyXVxufVxuXG5leHBvcnQgZGVmYXVsdCB1c2VBdHRyc1N0YXRlXG4iLCAiaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcydcblxudHlwZSBJbnB1dFByb3BzID0ge1xuICBuYW1lOiBzdHJpbmdcbiAgbGFiZWw6IHN0cmluZ1xuICBkZWZhdWx0VmFsdWU6IHN0cmluZ1xuICB0ZXN0SWQ/OiBzdHJpbmdcbiAgb25DaGFuZ2U6ICh2YWx1ZTogc3RyaW5nKSA9PiB2b2lkXG4gIG9yaWVudGF0aW9uPzogJ2hvcml6JyB8ICd2ZXJ0J1xufVxuY29uc3QgSW5wdXQ6IFJlYWN0LkZDPElucHV0UHJvcHM+ID0gKHtcbiAgbmFtZSxcbiAgbGFiZWwsXG4gIGRlZmF1bHRWYWx1ZSxcbiAgdGVzdElkLFxuICBvbkNoYW5nZSxcbiAgb3JpZW50YXRpb24gPSAndmVydCcsXG59KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKHtcbiAgICAgICAgJ2ZsZXggZmxleC1yb3cgaXRlbXMtYmFzZWxpbmUnOiBvcmllbnRhdGlvbiA9PSAnaG9yaXonLFxuICAgICAgfSl9XG4gICAgPlxuICAgICAgPGxhYmVsXG4gICAgICAgIGh0bWxGb3I9e25hbWV9XG4gICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhcbiAgICAgICAgICB7XG4gICAgICAgICAgICBibG9jazogb3JpZW50YXRpb24gPT0gJ3ZlcnQnLFxuICAgICAgICAgICAgJ3ByLTEgdXBwZXJjYXNlJzogb3JpZW50YXRpb24gPT0gJ2hvcml6JyxcbiAgICAgICAgICB9LFxuICAgICAgICAgICdtYi0xIHRleHQtc20gZm9udC1tZWRpdW0nLFxuICAgICAgICApfVxuICAgICAgPlxuICAgICAgICB7bGFiZWx9XG4gICAgICA8L2xhYmVsPlxuICAgICAgPGlucHV0XG4gICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgZGF0YS10ZXN0aWQ9e3Rlc3RJZCA/PyBuYW1lfVxuICAgICAgICB2YWx1ZT17ZGVmYXVsdFZhbHVlfVxuICAgICAgICBuYW1lPXtuYW1lfVxuICAgICAgICBvbkNoYW5nZT17KGUpID0+IG9uQ2hhbmdlKGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKFxuICAgICAgICAgIHsgJ2Jsb2NrIHctZnVsbCc6IG9yaWVudGF0aW9uID09ICd2ZXJ0JyB9LFxuICAgICAgICAgICdyb3VuZGVkLWxnIGJvcmRlciBib3JkZXItZ3JheS0zMDAgYmctZ3JheS01MCBwLTEuNSB0ZXh0LXNtIGZvY3VzOmJvcmRlci1ibHVlLTUwMCBmb2N1czpyaW5nLWJsdWUtNTAwJyxcbiAgICAgICAgKX1cbiAgICAgIC8+XG4gICAgPC9kaXY+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgSW5wdXRcbiIsICJpbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJ1xuXG50eXBlIFNlbGVjdFByb3BzID0ge1xuICBuYW1lOiBzdHJpbmdcbiAgbGFiZWw6IHN0cmluZ1xuICBvcHRpb25zOiB7IHZhbHVlOiBzdHJpbmc7IGxhYmVsOiBzdHJpbmcgfVtdXG4gIHNlbGVjdGVkT3B0aW9uPzogc3RyaW5nXG4gIG9uQ2hhbmdlOiAob3B0aW9uOiBzdHJpbmcpID0+IHZvaWRcbiAgY2xhc3NOYW1lPzogc3RyaW5nXG4gIG9yaWVudGF0aW9uPzogJ2hvcml6JyB8ICd2ZXJ0J1xufVxuXG5jb25zdCBTZWxlY3QgPSAoe1xuICBuYW1lLFxuICBsYWJlbCxcbiAgb3B0aW9ucyxcbiAgc2VsZWN0ZWRPcHRpb24sXG4gIG9uQ2hhbmdlLFxuICBjbGFzc05hbWUgPSAnJyxcbiAgb3JpZW50YXRpb24gPSAndmVydCcsXG59OiBTZWxlY3RQcm9wcykgPT4gKFxuICA8ZGl2XG4gICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKFxuICAgICAge1xuICAgICAgICAnZmxleCBmbGV4LXJvdyBpdGVtcy1iYXNlbGluZSc6IG9yaWVudGF0aW9uID09ICdob3JpeicsXG4gICAgICB9LFxuICAgICAgY2xhc3NOYW1lLFxuICAgICl9XG4gID5cbiAgICA8bGFiZWxcbiAgICAgIGh0bWxGb3I9e25hbWV9XG4gICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoXG4gICAgICAgIHtcbiAgICAgICAgICBibG9jazogb3JpZW50YXRpb24gPT0gJ3ZlcnQnLFxuICAgICAgICAgICdwci0xIHVwcGVyY2FzZSc6IG9yaWVudGF0aW9uID09ICdob3JpeicsXG4gICAgICAgIH0sXG4gICAgICAgICdtYi0xIHRleHQtc20gZm9udC1tZWRpdW0nLFxuICAgICAgKX1cbiAgICA+XG4gICAgICB7bGFiZWx9XG4gICAgPC9sYWJlbD5cbiAgICA8c2VsZWN0XG4gICAgICBpZD17bmFtZX1cbiAgICAgIHZhbHVlPXtzZWxlY3RlZE9wdGlvbiB8fCB1bmRlZmluZWR9XG4gICAgICBvbkNoYW5nZT17KGUpID0+IG9uQ2hhbmdlKGUhLnRhcmdldCEudmFsdWUpfVxuICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKFxuICAgICAgICB7ICdibG9jayB3LWZ1bGwnOiBvcmllbnRhdGlvbiA9PSAndmVydCcgfSxcbiAgICAgICAgJyBiZy1jYXJldC1kb3duIGFwcGVhcmFuY2Utbm9uZSByb3VuZGVkLWxnIGJvcmRlciBib3JkZXItZ3JheS0zMDAgYmctZ3JheS01MCBiZy1bbGVuZ3RoOjEwcHhdIGJnLVtjZW50ZXJfcmlnaHRfMTBweF0gYmctbm8tcmVwZWF0IHAtMiBwci01IHRleHQtc20gZm9jdXM6Ym9yZGVyLWJsdWUtNTAwIGZvY3VzOnJpbmctYmx1ZS01MDAnLFxuICAgICAgKX1cbiAgICA+XG4gICAgICB7b3B0aW9ucy5tYXAoKG9wdGlvbikgPT4gKFxuICAgICAgICA8b3B0aW9uIGtleT17b3B0aW9uLnZhbHVlfSB2YWx1ZT17b3B0aW9uLnZhbHVlfT5cbiAgICAgICAgICB7b3B0aW9uLmxhYmVsfVxuICAgICAgICA8L29wdGlvbj5cbiAgICAgICkpfVxuICAgIDwvc2VsZWN0PlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGRlZmF1bHQgU2VsZWN0XG4iLCAiaW1wb3J0IHsgS2lub0NvbnRleHQgfSBmcm9tICcuLi9raW5vJ1xuaW1wb3J0IHVzZUF0dHJzU3RhdGUgZnJvbSAnLi4vc2hhcmVkL2F0dHJfc3RhdGUnXG5pbXBvcnQgSW5wdXQgZnJvbSAnLi4vc2hhcmVkL2Zvcm0vaW5wdXQnXG5pbXBvcnQgU2VsZWN0IGZyb20gJy4uL3NoYXJlZC9mb3JtL3NlbGVjdCdcbmltcG9ydCB7IENvbm5lY3Rpb25DZWxsQXR0cnMgfSBmcm9tICcuL3R5cGVzJ1xuXG5pbnRlcmZhY2UgQXBwUHJvcHMge1xuICBpbml0aWFsQXR0cnM6IENvbm5lY3Rpb25DZWxsQXR0cnNcbiAgY3R4OiBLaW5vQ29udGV4dFxufVxuXG5jb25zdCBBcHA6IFJlYWN0LkZDPEFwcFByb3BzPiA9ICh7IGluaXRpYWxBdHRycywgY3R4IH0pID0+IHtcbiAgY29uc3QgW2F0dHJzLCB1cGRhdGVBdHRyXSA9IHVzZUF0dHJzU3RhdGUoY3R4LCBpbml0aWFsQXR0cnMpXG4gIGNvbnN0IHNvdXJjZV90eXBlX29wdGlvbnMgPSBbXG4gICAgeyBsYWJlbDogJ0ZpbGUnLCB2YWx1ZTogJ2ZpbGUnIH0sXG4gICAgeyBsYWJlbDogJ0Vudmlyb25tZW50IFZhcmlhYmxlJywgdmFsdWU6ICdlbnYnIH0sXG4gIF1cbiAgLy8gaWYgKGF0dHJzWydydW5uaW5nX29uX2s4cyddKVxuICBzb3VyY2VfdHlwZV9vcHRpb25zLnB1c2goeyBsYWJlbDogJ0s4cyBTZXJ2aWNlIEFjY291bnQnLCB2YWx1ZTogJ2s4cycgfSlcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwicm91bmRlZC1tZCBib3JkZXIgYm9yZGVyLXNvbGlkIGJvcmRlci1ncmF5LTMwMCBmb250LWludGVyIGZvbnQtbWVkaXVtIHRleHQtZ3JheS02MDBcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYm9yZGVyLWItc29saWQgZmxleCBmbGV4LXdyYXAgZ2FwLXgtNSBnYXAteS0zIGJvcmRlci1iIGJvcmRlci1iLWdyYXktMzAwIGJnLWJsdWUtMTAwIHAtM1wiPlxuICAgICAgICA8U2VsZWN0XG4gICAgICAgICAgbmFtZT1cInNvdXJjZV90eXBlXCJcbiAgICAgICAgICBsYWJlbD1cIlNvdXJjZSBUeXBlXCJcbiAgICAgICAgICBvcHRpb25zPXtzb3VyY2VfdHlwZV9vcHRpb25zfVxuICAgICAgICAgIHNlbGVjdGVkT3B0aW9uPXthdHRyc1snc291cmNlX3R5cGUnXX1cbiAgICAgICAgICBvbkNoYW5nZT17dXBkYXRlQXR0cignc291cmNlX3R5cGUnKX1cbiAgICAgICAgICBvcmllbnRhdGlvbj1cImhvcml6XCJcbiAgICAgICAgLz5cbiAgICAgICAgPElucHV0XG4gICAgICAgICAgbGFiZWw9XCJBc3NpZ24gVG9cIlxuICAgICAgICAgIG5hbWU9XCJhc3NpZ25fdG9cIlxuICAgICAgICAgIGRlZmF1bHRWYWx1ZT17YXR0cnNbJ3Jlc3VsdF92YXJpYWJsZSddfVxuICAgICAgICAgIG9uQ2hhbmdlPXt1cGRhdGVBdHRyKCdyZXN1bHRfdmFyaWFibGUnKX1cbiAgICAgICAgICBvcmllbnRhdGlvbj1cImhvcml6XCJcbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGZsZXgtd3JhcCBnYXAteC01IHAtM1wiPlxuICAgICAgICB7YXR0cnNbJ3NvdXJjZV90eXBlJ10gIT0gJ2s4cycgJiYgKFxuICAgICAgICAgIDxJbnB1dFxuICAgICAgICAgICAgbGFiZWw9e2F0dHJzWydzb3VyY2VfdHlwZSddID09ICdmaWxlJyA/ICdGaWxlIFBhdGgnIDogJ0VudiBWYXInfVxuICAgICAgICAgICAgbmFtZT1cInNvdXJjZVwiXG4gICAgICAgICAgICBkZWZhdWx0VmFsdWU9e2F0dHJzWydzb3VyY2UnXX1cbiAgICAgICAgICAgIG9uQ2hhbmdlPXt1cGRhdGVBdHRyKCdzb3VyY2UnKX1cbiAgICAgICAgICAgIG9yaWVudGF0aW9uPVwidmVydFwiXG4gICAgICAgICAgLz5cbiAgICAgICAgKX1cbiAgICAgICAge2F0dHJzWydzb3VyY2VfdHlwZSddICE9ICdrOHMnICYmIChcbiAgICAgICAgICA8SW5wdXRcbiAgICAgICAgICAgIGxhYmVsPVwiQ29udGV4dFwiXG4gICAgICAgICAgICBuYW1lPVwiY29udGV4dFwiXG4gICAgICAgICAgICBkZWZhdWx0VmFsdWU9e2F0dHJzLm9wdHMuY29udGV4dCB8fCAnJ31cbiAgICAgICAgICAgIG9uQ2hhbmdlPXsodmFsdWUpID0+XG4gICAgICAgICAgICAgIHVwZGF0ZUF0dHIoJ29wdHMnKSh7IC4uLmF0dHJzLm9wdHMsIGNvbnRleHQ6IHZhbHVlIH0pXG4gICAgICAgICAgICB9XG4gICAgICAgICAgLz5cbiAgICAgICAgKX1cbiAgICAgICAgPFNlbGVjdFxuICAgICAgICAgIG5hbWU9XCJpbnNlY3VyZV9za2lwX3Rsc192ZXJpZnlcIlxuICAgICAgICAgIGxhYmVsPVwiSW5zZWN1cmUgU2tpcCBUTFMgVmVyaWZ5XCJcbiAgICAgICAgICBvcHRpb25zPXtbXG4gICAgICAgICAgICB7IGxhYmVsOiAnWWVzJywgdmFsdWU6ICd0cnVlJyB9LFxuICAgICAgICAgICAgeyBsYWJlbDogJ05vJywgdmFsdWU6ICdmYWxzZScgfSxcbiAgICAgICAgICBdfVxuICAgICAgICAgIHNlbGVjdGVkT3B0aW9uPXthdHRycy5vcHRzLmluc2VjdXJlX3NraXBfdGxzX3ZlcmlmeS50b1N0cmluZygpfVxuICAgICAgICAgIG9uQ2hhbmdlPXsodmFsdWUpID0+XG4gICAgICAgICAgICB1cGRhdGVBdHRyKCdvcHRzJykoe1xuICAgICAgICAgICAgICAuLi5hdHRycy5vcHRzLFxuICAgICAgICAgICAgICBpbnNlY3VyZV9za2lwX3Rsc192ZXJpZnk6IEpTT04ucGFyc2UodmFsdWUpLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgICB9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBBcHBcbiIsICJpbXBvcnQgeyBLaW5vQ29udGV4dCB9IGZyb20gJy4uL2tpbm8nXG5pbXBvcnQgRXJyb3IgZnJvbSAnLi4vc2hhcmVkL2Vycm9yJ1xuaW1wb3J0IHsgbG9hZFJlYWN0IH0gZnJvbSAnLi4vc2hhcmVkL3V0aWxzJ1xuaW1wb3J0IEFwcCBmcm9tICcuL2FwcCdcbmltcG9ydCB7IENvbm5lY3Rpb25DZWxsQXR0cnMgfSBmcm9tICcuL3R5cGVzJ1xuXG5leHBvcnQgY29uc3QgaW5pdCA9IGFzeW5jIChcbiAgY3R4OiBLaW5vQ29udGV4dCxcbiAgYXR0cnM6IENvbm5lY3Rpb25DZWxsQXR0cnMsXG4pOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgYXdhaXQgbG9hZFJlYWN0KGN0eClcblxuICBjdHgucm9vdC5pbm5lckhUTUwgPSAnbG9hZGluZy4uLidcblxuICBjdHguaW1wb3J0Q1NTKCdtYWluLmNzcycpXG4gIGN0eC5pbXBvcnRDU1MoXG4gICAgJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9SW50ZXI6d2dodEA0MDA7NTAwJmRpc3BsYXk9c3dhcCcsXG4gIClcblxuICBjb25zdCByb290ID0gUmVhY3RET00uY3JlYXRlUm9vdChjdHgucm9vdClcbiAgaWYgKGF0dHJzLmVycm9yKSB7XG4gICAgcmV0dXJuIHJvb3QucmVuZGVyKDxFcnJvciBtZXNzYWdlPXthdHRycy5lcnJvcn0gLz4pXG4gIH1cblxuICByb290LnJlbmRlcig8QXBwIGluaXRpYWxBdHRycz17YXR0cnN9IGN0eD17Y3R4fSAvPilcbn1cbiJdLAogICJtYXBwaW5ncyI6ICJ5Z0JBQUEsSUFBQUEsRUFBQUMsRUFBQSxDQUFBQyxFQUFBQyxJQUFBLEVBT0MsVUFBWSxDQUNaLGFBRUEsSUFBSUMsRUFBUyxDQUFDLEVBQUUsZUFDWkMsRUFBbUIsZ0JBRXZCLFNBQVNDLEdBQWEsQ0FHckIsUUFGSUMsRUFBVSxDQUFDLEVBRU5DLEVBQUksRUFBR0EsRUFBSSxVQUFVLE9BQVFBLElBQUssQ0FDMUMsSUFBSUMsRUFBTSxVQUFVRCxDQUFDLEVBQ3JCLEdBQUtDLEVBRUwsS0FBSUMsRUFBVSxPQUFPRCxFQUVyQixHQUFJQyxJQUFZLFVBQVlBLElBQVksU0FDdkNILEVBQVEsS0FBS0UsQ0FBRyxVQUNOLE1BQU0sUUFBUUEsQ0FBRyxHQUMzQixHQUFJQSxFQUFJLE9BQVEsQ0FDZixJQUFJRSxFQUFRTCxFQUFXLE1BQU0sS0FBTUcsQ0FBRyxFQUNsQ0UsR0FDSEosRUFBUSxLQUFLSSxDQUFLLENBRXBCLFVBQ1VELElBQVksU0FBVSxDQUNoQyxHQUFJRCxFQUFJLFdBQWEsT0FBTyxVQUFVLFVBQVksQ0FBQ0EsRUFBSSxTQUFTLFNBQVMsRUFBRSxTQUFTLGVBQWUsRUFBRyxDQUNyR0YsRUFBUSxLQUFLRSxFQUFJLFNBQVMsQ0FBQyxFQUMzQixRQUNELENBRUEsUUFBU0csS0FBT0gsRUFDWEwsRUFBTyxLQUFLSyxFQUFLRyxDQUFHLEdBQUtILEVBQUlHLENBQUcsR0FDbkNMLEVBQVEsS0FBS0ssQ0FBRyxDQUduQixFQUNELENBRUEsT0FBT0wsRUFBUSxLQUFLLEdBQUcsQ0FDeEIsQ0FFSSxPQUFPSixFQUFXLEtBQWVBLEVBQU8sU0FDM0NHLEVBQVcsUUFBVUEsRUFDckJILEVBQU8sUUFBVUcsR0FDUCxPQUFPLFFBQVcsWUFBYyxPQUFP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b0JBQUNGLEVBQUEsQ0FDQyxLQUFLLDJCQUNMLE1BQU0sMkJBQ04sUUFBUyxDQUNQLENBQUUsTUFBTyxNQUFPLE1BQU8sTUFBTyxFQUM5QixDQUFFLE1BQU8sS0FBTSxNQUFPLE9BQVEsQ0FDaEMsRUFDQSxlQUFnQkosRUFBTSxLQUFLLHlCQUF5QixTQUFTLEVBQzdELFNBQVdNLEdBQ1RMLEVBQVcsTUFBTSxFQUFFLENBQ2pCLEdBQUdELEVBQU0sS0FDVCx5QkFBMEIsS0FBSyxNQUFNTSxDQUFLLENBQzVDLENBQUMsRUFFTCxDQUNGLENBQ0YsQ0FFSixFQUVPQyxFQUFRVixFQ3pFUixJQUFNVyxFQUFPLE1BQ2xCQyxFQUNBQyxJQUNrQixDQUNsQixNQUFNQyxFQUFVRixDQUFHLEVBRW5CQSxFQUFJLEtBQUssVUFBWSxhQUVyQkEsRUFBSSxVQUFVLFVBQVUsRUFDeEJBLEVBQUksVUFDRiwwRUFDRixFQUVBLElBQU1HLEVBQU8sU0FBUyxXQUFXSCxFQUFJLElBQUksRUFDekMsR0FBSUMsRUFBTSxNQUNSLE9BQU9FLEVBQUssT0FBTyxvQkFBQ0MsRUFBQSxDQUFNLFFBQVNILEVBQU0sTUFBTyxDQUFFLEVBR3BERSxFQUFLLE9BQU8sb0JBQUNFLEVBQUEsQ0FBSSxhQUFjSixFQUFPLElBQUtELEVBQUssQ0FBRSxDQUNwRCIsCiAgIm5hbWVzIjogWyJyZXF1aXJlX2NsYXNzbmFtZXMiLCAiX19jb21tb25KU01pbiIsICJleHBvcnRzIiwgIm1vZHVsZSIsICJoYXNPd24iLCAibmF0aXZlQ29kZVN0cmluZyIsICJjbGFzc05hbWVzIiwgImNsYXNzZXMiLCAiaSIsICJhcmciLCAiYXJnVHlwZSIsICJpbm5lciIsICJrZXkiLCAiRXJyb3IiLCAibWVzc2FnZSIsICJlcnJvcl9kZWZhdWx0IiwgImxvYWRSZWFjdCIsICJjdHgiLCAidXNlQXR0cnNTdGF0ZSIsICJjdHgiLCAiaW5pdGlhbEF0dHJzIiwgImF0dHJzIiwgInNldEF0dHJzIiwgInVwZGF0ZUF0dHIiLCAiYXR0ck5hbWUiLCAiYXR0clZhbHVlIiwgInVwZGF0ZXMiLCAiYXR0cl9zdGF0ZV9kZWZhdWx0IiwgImltcG9ydF9jbGFzc25hbWVzIiwgIklucHV0IiwgIm5hbWUiLCAibGFiZWwiLCAiZGVmYXVsdFZhbHVlIiwgInRlc3RJZCIsICJvbkNoYW5nZSIsICJvcmllbnRhdGlvbiIsICJjbGFzc05hbWVzIiwgImUiLCAiaW5wdXRfZGVmYXVsdCIsICJpbXBvcnRfY2xhc3NuYW1lcyIsICJTZWxlY3QiLCAibmFtZSIsICJsYWJlbCIsICJvcHRpb25zIiwgInNlbGVjdGVkT3B0aW9uIiwgIm9uQ2hhbmdlIiwgImNsYXNzTmFtZSIsICJvcmllbnRhdGlvbiIsICJjbGFzc05hbWVzIiwgImUiLCAib3B0aW9uIiwgInNlbGVjdF9kZWZhdWx0IiwgIkFwcCIsICJpbml0aWFsQXR0cnMiLCAiY3R4IiwgImF0dHJzIiwgInVwZGF0ZUF0dHIiLCAiYXR0cl9zdGF0ZV9kZWZhdWx0IiwgInNvdXJjZV90eXBlX29wdGlvbnMiLCAic2VsZWN0X2RlZmF1bHQiLCAiaW5wdXRfZGVmYXVsdCIsICJ2YWx1ZSIsICJhcHBfZGVmYXVsdCIsICJpbml0IiwgImN0eCIsICJhdHRycyIsICJsb2FkUmVhY3QiLCAicm9vdCIsICJlcnJvcl9kZWZhdWx0IiwgImFwcF9kZWZhdWx0Il0KfQo=
