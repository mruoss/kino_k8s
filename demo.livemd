# Kino_K8s Demo

```elixir
# Mix.install([{:kino_k8s, github: "mruoss/kino_k8s"}])
Mix.install([{:kino_k8s, path: "~/src/community/kino_k8s"}])
```

## Section

<!-- livebook:{"attrs":{"mix_env":"dev","opts":{"context":"kind-kompost-test","insecure_skip_tls_verify":true},"result_variable":"conn","source":"~/.kube/config","source_type":"file"},"chunks":null,"kind":"Elixir.KinoK8s.ConnectionCell","livebook_object":"smart_cell"} -->

```elixir
{:ok, conn} =
  K8s.Conn.from_file("~/.kube/config",
    context: "kind-kompost-test",
    insecure_skip_tls_verify: true
  )
```

<!-- livebook:{"attrs":{"mix_env":"dev","opts":{"context":"truenas","insecure_skip_tls_verify":true},"result_variable":"conn2","source":"~/.kube/config","source_type":"file"},"chunks":null,"kind":"Elixir.KinoK8s.ConnectionCell","livebook_object":"smart_cell"} -->

```elixir
{:ok, conn2} =
  K8s.Conn.from_file("~/.kube/config", context: "truenas", insecure_skip_tls_verify: true)
```

<!-- livebook:{"attrs":{"connection":{"conn_hash":48541884,"variable":"conn"},"connections":[{"conn_hash":8120277,"variable":"conn2"},{"conn_hash":48541884,"variable":"conn"}],"container":"postgres","containers":["postgres"],"mix_env":"dev","namespace":"postgres","namespaces":["default","kino-k8s","kompost","kube-node-lease","kube-public","kube-system","local-path-storage","pgcinst-controller-integration","pginst-controller-integration","postgres","postgres-database-controller-integration","temporal","temporal-api-server-controller-integration","temporal-namespace-controller-integration"],"pod":"postgres-5c699ccd4f-t7jsq","pods":["postgres-5c699ccd4f-t7jsq"]},"chunks":null,"kind":"Elixir.KinoK8s.TerminalCell","livebook_object":"smart_cell"} -->

```elixir
KinoK8s.KinoTerminal.open(conn, "postgres", "postgres-5c699ccd4f-t7jsq", container: "postgres")
```

<!-- livebook:{"attrs":{"connection":{"conn_hash":48541884,"variable":"conn"},"connections":[{"conn_hash":48541884,"variable":"conn"},{"conn_hash":8120277,"variable":"conn2"}],"gvk":{"api_version":"v1","index":"v1pods","kind":"Pod","name":"pods","namespaced":true},"mix_env":"dev","namespace":"postgres","namespaces":["__ALL__","default","kino-k8s","kompost","kube-node-lease","kube-public","kube-system","local-path-storage","pgcinst-controller-integration","pginst-controller-integration","postgres","postgres-database-controller-integration","temporal","temporal-api-server-controller-integration","temporal-namespace-controller-integration"],"result_type":"list","result_types":["list","stream"],"result_variable":"result"},"chunks":null,"kind":"Elixir.KinoK8s.ListCell","livebook_object":"smart_cell"} -->

```elixir
{:ok, result} =
  K8s.Client.list("v1", "pods", namespace: "postgres")
  |> K8s.Client.put_conn(conn)
  |> K8s.Client.run()

result
```

```elixir
# result |> Stream.map(&IO.puts(&1["metadata"]["name"])) |> Stream.run()
# result["items"] |> Enum.map(& &1["metadata"]["name"])
```

<!-- livebook:{"attrs":{"body":"kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kino-k8s-cm\n  namespace: default\ndata:\n  key: default\n","connection":{"conn_hash":8120277,"variable":"conn2"},"connections":[{"conn_hash":48541884,"variable":"conn"},{"conn_hash":8120277,"variable":"conn2"}],"method":"apply","methods":["apply","create","update"],"result_variable":"applied_resource"},"chunks":null,"kind":"Elixir.KinoK8s.ApplyCell","livebook_object":"smart_cell"} -->

```elixir
import YamlElixir.Sigil

{:ok, applied_resource} =
  ~y"""
  kind: ConfigMap
  apiVersion: v1
  metadata:
    name: kino-k8s-cm
    namespace: default
  data:
    key: default
  """
  |> K8s.Client.apply()
  |> K8s.Client.put_conn(conn2)
  |> K8s.Client.run()

applied_resource |> Ymlr.document!() |> IO.puts()
```

<!-- livebook:{"attrs":{"connection":{"conn_hash":48541884,"variable":"conn"},"connections":[{"conn_hash":48541884,"variable":"conn"},{"conn_hash":8120277,"variable":"conn2"}],"gvk":{"api_version":"v1","index":"v1pods","kind":"Pod","name":"pods","namespaced":true},"mix_env":"dev","namespace":"postgres","namespaces":["default","kino-k8s","kompost","kube-node-lease","kube-public","kube-system","local-path-storage","pgcinst-controller-integration","pginst-controller-integration","postgres","postgres-database-controller-integration","temporal","temporal-api-server-controller-integration","temporal-namespace-controller-integration"],"resource":"postgres-5c699ccd4f-t7jsq","resources":["postgres-5c699ccd4f-t7jsq"],"result_variable":"resource"},"chunks":null,"kind":"Elixir.KinoK8s.GETCell","livebook_object":"smart_cell"} -->

```elixir
{:ok, resource} =
  K8s.Client.get("v1", "pods", name: "postgres-5c699ccd4f-t7jsq", namespace: "postgres")
  |> K8s.Client.put_conn(conn)
  |> K8s.Client.run()

resource |> Ymlr.document!() |> IO.puts()
```
