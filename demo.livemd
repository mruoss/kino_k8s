# Kino_K8s Demo

```elixir
Mix.install([{:kino_k8s, github: "mruoss/kino_k8s"}])

# Mix.install([{:kino_k8s, path: "~/src/community/kino_k8s"}])
```

## Section

<!-- livebook:{"attrs":{"mix_env":"dev","opts":{"context":"","insecure_skip_tls_verify":true},"result_variable":"conn","running_on_k8s":false,"source":"~/.kube/config","source_type":"file"},"chunks":null,"kind":"Elixir.KinoK8s.ConnectionCell","livebook_object":"smart_cell"} -->

```elixir
{:ok, conn} =
  K8s.Conn.from_file("~/.kube/config", context: "", insecure_skip_tls_verify: true)
```

<!-- livebook:{"attrs":{"connection":{"conn_hash":48541884,"variable":"conn"},"connections":[{"conn_hash":48541884,"variable":"conn"}],"gvk":{"api_version":"v1","index":"v1pods","kind":"Pod","name":"pods","namespaced":true},"mix_env":"dev","namespace":"default","namespaces":["__ALL__","default","kino-k8s","kompost","kube-node-lease","kube-public","kube-system","local-path-storage","pgcinst-controller-integration","pginst-controller-integration","postgres","postgres-database-controller-integration","temporal","temporal-api-server-controller-integration","temporal-namespace-controller-integration"],"result_type":"list","result_types":["list","stream"],"result_variable":"result"},"chunks":null,"kind":"Elixir.KinoK8s.ListCell","livebook_object":"smart_cell"} -->

```elixir

```

```elixir
# result |> Stream.map(&IO.puts(&1["metadata"]["name"])) |> Stream.run()
result["items"] |> Enum.map(& &1["metadata"]["name"])
```

<!-- livebook:{"attrs":{"body":"kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kino-k8s-cm\n  namespace: default\ndata:\n  key: default\n","connection":{"conn_hash":48541884,"variable":"conn"},"connections":[{"conn_hash":48541884,"variable":"conn"}],"method":"apply","methods":["apply","create","update"],"result_variable":"applied_resource"},"chunks":null,"kind":"Elixir.KinoK8s.ApplyCell","livebook_object":"smart_cell"} -->

```elixir

```

<!-- livebook:{"attrs":{"connection":{"conn_hash":48541884,"variable":"conn"},"connections":[{"conn_hash":48541884,"variable":"conn"}],"gvk":null,"mix_env":"dev","namespace":null,"namespaces":null,"resource":null,"resources":null,"result_variable":"resource"},"chunks":null,"kind":"Elixir.KinoK8s.GETCell","livebook_object":"smart_cell"} -->

```elixir
nil
```
